// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package mapper

import (
	orderservicev1 "github.com/serenite11/market/proto/services/order-service-v1"
	model "github.com/serenite11/market/services/order-service/internal/domain/order/model"
)

type OrderConverter struct{}

func (c *OrderConverter) FromEntityOrderToProto(source *model.Order) *orderservicev1.Order {
	var pOrder_service_v1Order *orderservicev1.Order
	if source != nil {
		var order_service_v1Order orderservicev1.Order
		order_service_v1Order.Id = ConvertId((*source).Id)
		order_service_v1Order.Amount = (*source).Amount
		order_service_v1Order.Status = orderservicev1.OrderStatus((*source).Status)
		order_service_v1Order.UserId = ConvertId((*source).UserId)
		order_service_v1Order.CreatedAt = ConvertTime((*source).CreatedAt)
		order_service_v1Order.UpdatedAt = ConvertTime((*source).UpdatedAt)
		order_service_v1Order.CompletedAt = ConvertPQTime((*source).CompletedAt)
		pOrder_service_v1Order = &order_service_v1Order
	}
	return pOrder_service_v1Order
}
func (c *OrderConverter) FromEntityOrdersToProto(source []*model.Order) []*orderservicev1.Order {
	var pOrder_service_v1OrderList []*orderservicev1.Order
	if source != nil {
		pOrder_service_v1OrderList = make([]*orderservicev1.Order, len(source))
		for i := 0; i < len(source); i++ {
			pOrder_service_v1OrderList[i] = c.FromEntityOrderToProto(source[i])
		}
	}
	return pOrder_service_v1OrderList
}
